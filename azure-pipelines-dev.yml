# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dev

variables:
  solution: '*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
  - job: build
    displayName: Build & Publish
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk 8.0.x'
      inputs:
        version: 8.0.x

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*.UnitTest.csproj'
        arguments: '--configuration $(buildConfiguration)'

    #- task: QodanaScan@2024
    #  env:
    #    QODANA_TOKEN: $(QODANA_TOKEN)

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '**/Villajour.API.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'API_$(Build.BuildNumber)'
        publishLocation: 'Container'
      condition: succeededOrFailed()

  - job: deploy
    displayName: Deployment..
    dependsOn: build

    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'API_$(Build.BuildNumber)'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Dev/test 1 (2024.villAjour.1)(65d451fe-e9a7-4469-a24f-173719f9769d)'
        appType: 'webAppLinux'
        WebAppName: 'apidevvillajour'
        packageForLinux: '$(Build.ArtifactStagingDirectory)/API_$(Build.BuildNumber)/*.zip'
        RuntimeStack: 'DOTNETCORE|8.0'
    
    - task: AzureAppServiceSettings@1
      inputs:
        azureSubscription: 'Dev/test 1 (2024.villAjour.1)(65d451fe-e9a7-4469-a24f-173719f9769d)'
        appName: 'apidevvillajour'
        resourceGroupName: 'villajour'
        connectionStrings: |
          [
            {
              "name": "DefaultConnection",
              "value": "$(dbVillajour_ConnectionString)",
              "type": "SQLServer",
              "slotSetting": false
            }
          ]

